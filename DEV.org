#+TITLE: pywm developer information

* Development
** Current (v0.2)

*** STRT Layer shell
- [ ] Fill in missing parts on wm_view_layer.c
- [ ] Keyboard interactivity

*** STRT Rewrite state handling
- [X] _pywm_view_update: Don't send general info like pid and parent all the time
- [X] Generalized upstream hints (now size_contraints --> size_contraints and layer shell) as array of ints e.g.
- [X] Separate init and on_map: Can this make floating_size_initial in newm superfluous? - No, not all views provide sufficient information (size constraints) on first commit
- [X] Separate init and o_map: main call on_map
- [ ] Upstream (possibly also downstream) fixed output on views
- [ ] Downstream floating state (current upstream logic only for initial setting - necessary for more complicated decisions like xwayland) --> set_tiled()

*** STRT Additionally to wm_content->fixed_output enable wm_content->workspace (x, y, w, h) with output scissoring and proper input handling + proper damage tracking
- [X] Render only on workspace
- [X] Accept input only on workspace
- [ ] Add damage only on workspace (see TODO marks)
- [ ] Should frame done only be sent to visible windows?

*** TODO Gestures like pinch-to-zoom in firefox not working -> wlr pointer gestures
*** TODO Updatable config: See TODO marks

*** TODO Release
- [ ] TODO comments
- [ ] TESTS: Move from pywm here + add layer shell
- [ ] Documentation / Update config keys
- [ ] Check valgrind for lost memory
- [ ] Terminate newm without faults
- [ ] Change loglevel to INFO default

** Backlog / Ideas
*** wlroots migration to gitlab.freedesktop.org
*** wlr_output_manager
*** Complete libinput device config / support for external mouse
*** Use libseat from python / patched python evdev
*** Configurable gestures (abstraction layer) + possibility to use external "gesture providers" (e.g. detection from webcam video)
*** Support newm-sidecar (or similar, via ws://) as touchpad
*** Touch input from yoga or similar
*** Decorations for floating windows (dialogs) or more general borders


* Notes
- Keep an eye on Chromium bug: https://bugs.chromium.org/p/chromium/issues/detail?id=1246834 So long patch by undoing https://github.com/swaywm/wlroots/commit/d290b13871fa18dcad6cd90d9ee93e7205742124?diff=unified

- Depending on the settings (see newm) XWayland apps are responsible for handling HiDPI themselves and will per default appear very small
- GDK on XWayland: GDK_DPI_SCALE=2
- Electron apps: --force-device-scale-factor=2

- Screen record: wf-recorder
- Screen shot: grim
- Firefox: MOZ_ENABLE_WAYLAND=1
- Chromium: --enable-features=UseOzonePlatform --ozone-platform=wayland
- Matplotlib / Qt5 on Wayland requires DISPLAY=":0" to be set
- Apple Trackpad
        https://medium.com/macoclock/how-to-pair-apple-magic-keyboard-a1314-on-ubuntu-18-04-and-act-as-numpad-42fe4402454c
        https://wiki.archlinux.org/index.php/Bluetooth

- Screensharing using `xdg-desktop-portal-wlr -r`
